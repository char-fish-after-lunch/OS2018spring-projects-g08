ifneq ($(MAKECMDGOALS),clean)
include $(KCONFIG_AUTOCONFIG)
endif

KERNEL_IMG := $(OBJPATH_ROOT)/kernel.img
KERNEL_ELF := $(KTREE_OBJ_ROOT)/kernel-$(ARCH).elf
LINK_FILE_IN	:= $(KTREE)/arch/${ARCH}/ucore.ld.in
LINK_FILE     := $(KTREE_OBJ_ROOT)/arch/$(ARCH)/ucore.ld
SEDFLAGS	= s/TEXT_START/$(UCONFIG_KERNEL_BASE)/

FSIMG		:= ${T_OBJ}/sfs.img
export DATA_FILE ?= $(FSIMG)

__CMD := case sfs.img in /*) echo 1;; esac
ifeq ($(shell $(__CMD)), 1)
RAMDISK_FILE := $(shell echo sfs.img)
else
RAMDISK_FILE := $(OBJPATH_ROOT)/$(shell echo sfs.img)
endif
RAMDISK_OBJ := $(RAMDISK_FILE).o


$(KERNEL_IMG): $(KERNEL_ELF)
	@echo Making $@
	cd $(TOPDIR)/../riscv-pk && rm -rf build && mkdir build && cd build && ../configure --prefix=$(RISCV) --host=riscv64-unknown-elf --with-payload=$(KERNEL_ELF) --disable-fp-emulation --enable-logo && make && cp bbl $(KERNEL_IMG)

$(KERNEL_ELF): $(LINK_FILE) $(KERNEL_BUILTIN) $(RAMDISK_OBJ) 
	@echo Linking uCore
	$(Q)$(TARGET_LD) $(TARGET_LDFLAGS) -T $(LINK_FILE) $(KERNEL_BUILTIN) $(RAMDISK_OBJ) -o $@

$(LINK_FILE): $(LINK_FILE_IN) $(KCONFIG_AUTOCONFIG)
	@echo "creating linker script"
	@sed  "$(SEDFLAGS)" < $< > $@

INITRD_PIGGY_S:=$(KTREE_OBJ_ROOT)/arch/$(ARCH)/tools/initrd.S
$(RAMDISK_OBJ): $(RAMDISK_FILE)
	@echo "Linking Initrd into kernel, using $(RAMDISK_FILE)"
	@mkdir -p $(KTREE_OBJ_ROOT)/arch/$(ARCH)/tools
	@sed "s#DATA_FILE#$(RAMDISK_FILE)#" < $(KTREE)/arch/$(ARCH)/tools/initrd.S.in > $(INITRD_PIGGY_S)
	$(Q)$(TARGET_CC) -c $(INITRD_PIGGY_S) -o $@
	$(Q)rm -f $(INITRD_PIGGY_S)

.PHONY: all clean FORCE
all: $(KERNEL_IMG)

FORCE:

clean:
	rm -f $(KERNEL_ELF) $(LINK_FILE)
